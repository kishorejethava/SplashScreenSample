name: SplashScreenSample CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v4

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run Lint
      run: ./gradlew lintDevDebug

    - name: Upload html test report
      uses: actions/upload-artifact@v4
      with:
        name: lint.html
        path: app/build/reports/lint-results-devDebug.html

  unit-test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Unit Test
        run: ./gradlew test

      - name: Upload unit test report
        uses: actions/upload-artifact@v4
        with:
          name: unit_test_report
          path: app/build/reports/tests/testDevDebugUnitTest/

  code-coverage:
    needs: [unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run Unit Tests
        run: ./gradlew testDevDebugUnitTest

      - name: Generate Jacoco Report
        run: ./gradlew jacocoTestReport

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: app/build/reports/jacoco/jacocoTestReport/html

  static-code-analysis:
    needs: [code-coverage]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: SonarCloud Scan
        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    name: Generate APK
    needs: [static-code-analysis]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Build DevDebug APK
        run: ./gradlew assembleDevDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: splashscreen-sample-dev.apk
          path: app/build/outputs/apk/dev/debug/app-dev-debug.apk


