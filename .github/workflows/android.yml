name: Android CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
#  lint:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout the code
#      uses: actions/checkout@v4
#
#    - name: Grant execute permission for gradlew
#      run: chmod +x gradlew
#
#    - name: Run Lint
#      run: ./gradlew lintDebug
#
#    - name: Upload html test report
#      uses: actions/upload-artifact@v4
#      with:
#        name: lint.html
#        path: app/build/reports/lint-results-debug.html
#
#  unit-test:
#    needs: [lint]
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Run Unit Test
#        run: ./gradlew test
#
#      - name: Upload unit test report
#        uses: actions/upload-artifact@v4
#        with:
#          name: unit_test_report
#          path: app/build/reports/tests/testDebugUnitTest/

  androidTests:
    runs-on: macos-14  # Apple Silicon runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Emulator & Image
        run: |
          sdkmanager --install "platform-tools" "emulator"
          sdkmanager --install "system-images;android-30;google_apis;arm64-v8a"

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;arm64-v8a" --device "pixel"
          echo "hw.cpu.ncore=4" >> ~/.android/avd/test.avd/config.ini

      - name: Start Emulator
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_HOME }}
        run: |
          $ANDROID_SDK_ROOT/emulator/emulator -avd test -no-window -no-audio -gpu swiftshader_indirect -no-snapshot -no-boot-anim > emulator.log 2>&1 &
          adb wait-for-device
          boot_completed=""
          until [[ "$boot_completed" == "1" ]]; do
            sleep 5
            boot_completed=$(adb shell getprop sys.boot_completed | tr -d '\r')
          done

      - name: Run Instrumentation Tests
        run: ./gradlew connectedDebugAndroidTest

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected/