name: SplashScreenSample-Dev CI-CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
#  lint:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout the code
#      uses: actions/checkout@v4
#
#    - name: Grant execute permission for gradlew
#      run: chmod +x gradlew
#
#    - name: Run Lint
#      run: ./gradlew lintDebug
#
#    - name: Upload html test report
#      uses: actions/upload-artifact@v4
#      with:
#        name: lint.html
#        path: app/build/reports/lint-results-debug.html
#
#  unit-test:
#    needs: [lint]
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Run Unit Test
#        run: ./gradlew test
#
#      - name: Upload unit test report
#        uses: actions/upload-artifact@v4
#        with:
#          name: unit_test_report
#          path: app/build/reports/tests/testDebugUnitTest/

#  static-code-analysis:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: 17
#
#      - name: SonarCloud Scan
#        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Build DevDebug APK
        run: ./gradlew assembleDevDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: splashscreen-sample-dev.apk
          path: app/build/outputs/apk/dev/debug/app-dev-debug.apk

  deploy:
    name: Deploy to Firebase
    needs: package
    runs-on: macos-14

    steps:
      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: splashscreen-sample-dev.apk
          path: app/build/outputs/apk/dev/debug/

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Upload to Firebase App Distribution
        run: |
          firebase appdistribution:distribute app/build/outputs/apk/dev/debug/app-dev-debug.apk \
            --app ${{ secrets.FIREBASE_APP_ID_DEV }}\
            --token "${{ secrets.FIREBASE_TOKEN }}"


